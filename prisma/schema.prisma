// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// url      = env("DATABASE_URL")

datasource db {
  provider = "sqlite"
  url      = env("PRISMA_DATABASE_URL")
}

model User {
  id           String  @id @unique @default(cuid())
  uid          String? @unique
  phone        String  @unique
  subscription String?
  fullName     String

  memberOf StoreMember[]
}

model Runchit {
  id        String   @id @unique @default(cuid())
  name      String
  duitnowqr String?
  address   String?
  createdAt DateTime @default(now())

  members  StoreMember[]
  roles    StoreRole[]
  products Product[]
}

model StoreRole {
  id         String  @id @unique @default(cuid())
  name       String
  permission String?

  storeId String
  store   Runchit @relation(fields: [storeId], references: [id], onDelete: Cascade)

  members StoreMember[]
}

model StoreMember {
  id String @id @unique @default(cuid())

  storeId String
  store   Runchit @relation(fields: [storeId], references: [id], onDelete: Cascade)

  memberId String?
  members  User?   @relation(fields: [memberId], references: [uid], onDelete: Cascade)

  roles StoreRole[]
}

model Product {
  id    String @id @unique @default(cuid())
  name  String
  price Float

  inventory ProductInventory?

  storeId String
  store   Runchit @relation(fields: [storeId], references: [id], onDelete: Cascade)

  supplierId String?
  supplier   Supplier? @relation(fields: [supplierId], references: [id], onDelete: SetNull)

  categoryId String?
  category   ProductCategory? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  images ProductImages[]
  sku    ProductSku[]
}

model ProductInventory {
  id       String  @id @unique @default(cuid())
  shelf    Decimal @default(0)
  storage  Decimal @default(0)
  location String  @default("")

  productId String  @unique
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model ProductImages {
  id  String @id @unique @default(cuid())
  url String

  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model ProductSku {
  id  String @id @unique @default(cuid())
  sku String

  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  attributes ProductAttribute[]
}

model ProductAttribute {
  id    String @id @unique @default(cuid())
  name  String
  value String

  skuId String
  sku   ProductSku @relation(fields: [skuId], references: [id], onDelete: Cascade)
}

model ProductCategory {
  id   String @id @unique @default(cuid())
  name String

  products Product[]
}

model Supplier {
  id      String @id @unique @default(cuid())
  name    String
  contact String

  products Product[]
}
